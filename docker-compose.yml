version: "3"

services:
  web:
    build: .
    # command: >
    #   sh -c "python manage.py migrate &&
    #          python manage.py runserver 0.0.0.0:8000"
    command: |
      sh -c "
        python manage.py collectstatic --noinput &&
        python manage.py migrate &&
        gunicorn --bind 0.0.0.0:8000 recipe_mgmt_app.wsgi:application
      "
    ports:
      - "8000:8000"
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    volumes:
      - .:/app
      - ./staticfiles:/app/staticfiles
      - ./mediafiles:/app/mediafiles
      - ./logs:/app/logs
    depends_on:
      - db
    networks:
      - acme-network
  
  db:
    image: postgres:latest
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - acme-network
  
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./staticfiles:/app/staticfiles/
      - ./mediafiles:/app/mediafiles/
    depends_on:
      - web
    networks:
      - acme-network
 
volumes:
  postgres_data:

networks:
  acme-network:
    driver: bridge
